{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blog/2020-12-25-sharp/","result":{"data":{"markdownRemark":{"excerpt":"Apple Silicon でを動作させるには、少々工夫が必要です。(2020/12/25 現在) 前提 ARM 版の Node.js, Homebrew, Docker がセットアップ済みであること 方法その１ ローカル環境で使う Docker…","html":"<p>Apple Silicon で<code class=\"language-text\">sharp</code>を動作させるには、少々工夫が必要です。(2020/12/25 現在)</p>\n<h2>前提</h2>\n<p>ARM 版の Node.js, Homebrew, Docker がセットアップ済みであること</p>\n<h2>方法その１ ローカル環境で使う</h2>\n<p>Docker を使わずに、ローカル環境で<code class=\"language-text\">sharp</code>を使えるようにする方法です。\nこの方法を取る場合は、ソースから<code class=\"language-text\">libvips</code>をビルドし、グローバルにインストールして、<code class=\"language-text\">sharp</code>に使用させる必要があります。\nただ、この方法だとランタイムにおいてエラーが出たりしたので、おすすめは後述の Docker を使う方法です。</p>\n<p><a href=\"https://github.com/lovell/sharp/issues/2460\">参考</a></p>\n<p>ビルドに必要なライブラリを追加</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">brew install pkg-config glib zlib</code></pre></div>\n<p><a href=\"https://github.com/libvips/libvips#optional-dependencies\"><code class=\"language-text\">libvips</code>の optional-dependencies</a>をみながら必要なものをインストールする。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">\b# 例えばjpeg, png, webpを扱うなら\nbrew install libjpeg-turbo libpng webp\n\n# うちの環境では途中でコケることがありました。\n# もう一回コマンドを実行すると成功したので、原因がよくわかりませんでした。</code></pre></div>\n<p><code class=\"language-text\">libvips</code>のソースを<a href=\"https://github.com/libvips/libvips/releases\">ダウンロード</a>して解凍したのち、以下を実行する</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">PKG_CONFIG_PATH=/opt/homebrew/Cellar/zlib/1.2.11/lib/pkgconfig ./configure\nmake\nsudo make install</code></pre></div>\n<p>なお、近いうちに何も考えずに使えるプレビルトバイナリが準備されるはずなので、\nその暁にはグローバルインストールした<code class=\"language-text\">libvips</code>を消しておきましょう。\n余計なトラブルを避けるために。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># vipsのソースフォルダで\nsudo make uninsatll</code></pre></div>\n<h2>方法その２ Docker 環境で使う</h2>\n<p>Docker 環境ならば何も考えずにいけるかと思いきや、やはりビルドに失敗します。これは、\nNode.js の ARM64 版イメージの<code class=\"language-text\">glib</code>が、sharp のビルド環境に適合しないためだそうです。</p>\n<p><a href=\"https://github.com/lovell/sharp/issues/2482\">参考</a></p>\n<p>解消するためには Debian の最新版である bullseye（未リリース）を使えば良いのですが、Node.js の公式としてはリリースされていません。\nそのため、Node.js を使える bullseye の環境を自前で用意する必要があります。\n例えば、下記のような Dockerfile を自前で作成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> buildpack<span class=\"token punctuation\">-</span>deps<span class=\"token punctuation\">:</span>bullseye\n\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># 下記はNode.jsの公式イメージのDockerfileからコピペしたもの</span>\n<span class=\"token comment\"># https://github.com/nodejs/docker-node/blob/master/15/buster/Dockerfile</span>\n<span class=\"token comment\">#</span>\n<span class=\"token keyword\">RUN</span> groupadd <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>gid 1000 node \\\n  &amp;&amp; useradd <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>uid 1000 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>gid node <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>shell /bin/bash <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>create<span class=\"token punctuation\">-</span>home node\n\n<span class=\"token keyword\">ENV</span> NODE_VERSION 15.4.0\n\n<span class=\"token keyword\">RUN</span> ARCH= &amp;&amp; dpkgArch=<span class=\"token string\">\"$(dpkg --print-architecture)\"</span> \\\n  &amp;&amp; case <span class=\"token string\">\"${dpkgArch##*-}\"</span> in \\\n  amd64) ARCH=<span class=\"token string\">'x64'</span>;; \\\n  ppc64el) ARCH=<span class=\"token string\">'ppc64le'</span>;; \\\n  s390x) ARCH=<span class=\"token string\">'s390x'</span>;; \\\n  arm64) ARCH=<span class=\"token string\">'arm64'</span>;; \\\n  armhf) ARCH=<span class=\"token string\">'armv7l'</span>;; \\\n  i386) ARCH=<span class=\"token string\">'x86'</span>;; \\\n  *) echo <span class=\"token string\">\"unsupported architecture\"</span>; exit 1 ;; \\\n  esac \\\n  <span class=\"token comment\"># gpg keys listed at https://github.com/nodejs/node#release-keys</span>\n  &amp;&amp; set <span class=\"token punctuation\">-</span>ex \\\n  &amp;&amp; for key in \\\n  4ED778F539E3634C779C87C6D7062848A1AB005C \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  1C050899334244A8AF75E53792EF661D867B9DFA \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n  108F52B48DB57BB0CC439B2997B01419BD92F80A \\\n  B9E2F5981AA6E0CD28160D9FF13993A75599653C \\\n  ; do \\\n  gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>keyserver hkp<span class=\"token punctuation\">:</span>//p80.pool.sks<span class=\"token punctuation\">-</span>keyservers.net<span class=\"token punctuation\">:</span>80 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>recv<span class=\"token punctuation\">-</span>keys <span class=\"token string\">\"$key\"</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \\\n  gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>keyserver hkp<span class=\"token punctuation\">:</span>//ipv4.pool.sks<span class=\"token punctuation\">-</span>keyservers.net <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>recv<span class=\"token punctuation\">-</span>keys <span class=\"token string\">\"$key\"</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \\\n  gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>keyserver hkp<span class=\"token punctuation\">:</span>//pgp.mit.edu<span class=\"token punctuation\">:</span>80 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>recv<span class=\"token punctuation\">-</span>keys <span class=\"token string\">\"$key\"</span> ; \\\n  done \\\n  &amp;&amp; curl <span class=\"token punctuation\">-</span>fsSLO <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>compressed <span class=\"token string\">\"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"</span> \\\n  &amp;&amp; curl <span class=\"token punctuation\">-</span>fsSLO <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>compressed <span class=\"token string\">\"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"</span> \\\n  &amp;&amp; gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>decrypt <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>output SHASUMS256.txt SHASUMS256.txt.asc \\\n  &amp;&amp; grep <span class=\"token string\">\" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\"</span> SHASUMS256.txt <span class=\"token punctuation\">|</span> sha256sum <span class=\"token punctuation\">-</span>c <span class=\"token punctuation\">-</span> \\\n  &amp;&amp; tar <span class=\"token punctuation\">-</span>xJf <span class=\"token string\">\"node-v$NODE_VERSION-linux-$ARCH.tar.xz\"</span> <span class=\"token punctuation\">-</span>C /usr/local <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>strip<span class=\"token punctuation\">-</span>components=1 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>same<span class=\"token punctuation\">-</span>owner \\\n  &amp;&amp; rm <span class=\"token string\">\"node-v$NODE_VERSION-linux-$ARCH.tar.xz\"</span> SHASUMS256.txt.asc SHASUMS256.txt \\\n  &amp;&amp; ln <span class=\"token punctuation\">-</span>s /usr/local/bin/node /usr/local/bin/nodejs \\\n  <span class=\"token comment\"># smoke tests</span>\n  &amp;&amp; node <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version \\\n  &amp;&amp; npm <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n\n<span class=\"token keyword\">ENV</span> YARN_VERSION 1.22.5\n\n<span class=\"token keyword\">RUN</span> set <span class=\"token punctuation\">-</span>ex \\\n  &amp;&amp; for key in \\\n  6A010C5166006599AA17F08146C2130DFD2497F5 \\\n  ; do \\\n  gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>keyserver hkp<span class=\"token punctuation\">:</span>//p80.pool.sks<span class=\"token punctuation\">-</span>keyservers.net<span class=\"token punctuation\">:</span>80 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>recv<span class=\"token punctuation\">-</span>keys <span class=\"token string\">\"$key\"</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \\\n  gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>keyserver hkp<span class=\"token punctuation\">:</span>//ipv4.pool.sks<span class=\"token punctuation\">-</span>keyservers.net <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>recv<span class=\"token punctuation\">-</span>keys <span class=\"token string\">\"$key\"</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \\\n  gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>keyserver hkp<span class=\"token punctuation\">:</span>//pgp.mit.edu<span class=\"token punctuation\">:</span>80 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>recv<span class=\"token punctuation\">-</span>keys <span class=\"token string\">\"$key\"</span> ; \\\n  done \\\n  &amp;&amp; curl <span class=\"token punctuation\">-</span>fsSLO <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>compressed <span class=\"token string\">\"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"</span> \\\n  &amp;&amp; curl <span class=\"token punctuation\">-</span>fsSLO <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>compressed <span class=\"token string\">\"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"</span> \\\n  &amp;&amp; gpg <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>batch <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>verify yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION.tar.gz.asc yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION.tar.gz \\\n  &amp;&amp; mkdir <span class=\"token punctuation\">-</span>p /opt \\\n  &amp;&amp; tar <span class=\"token punctuation\">-</span>xzf yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION.tar.gz <span class=\"token punctuation\">-</span>C /opt/ \\\n  &amp;&amp; ln <span class=\"token punctuation\">-</span>s /opt/yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  &amp;&amp; ln <span class=\"token punctuation\">-</span>s /opt/yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  &amp;&amp; rm yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION.tar.gz.asc yarn<span class=\"token punctuation\">-</span>v$YARN_VERSION.tar.gz \\\n  <span class=\"token comment\"># smoke test</span>\n  &amp;&amp; yarn <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Copied from official docker file END</span>\n<span class=\"token comment\">#</span></code></pre></div>\n<p>この Dockerfile の末尾に自分の Dockerfile を追記するか、あるいは上記で作成したイメージを使ってコンテナを走らせれば、プレビルドされた<code class=\"language-text\">sharp</code>がダウンロードされ、スムーズに問題なく動作します。</p>\n<h2>総括</h2>\n<p>これさえクリアできれば ARM ネイティブで動かせるプロジェクトが結構あって嬉しい！</p>","fields":{"slug":"/2020-12-25-sharp/"},"frontmatter":{"title":"Apple Siliconでsharpを動かす","summary":null,"date":"2020-12-25T15:00:00.000Z","dateModified":"2020-12-25T15:00:00.000Z","thumbnail":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2020-12-25-sharp/","modifiedDate":"2020-12-25T15:00:00.000Z"}}}